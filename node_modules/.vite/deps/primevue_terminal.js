import {
  Fragment,
  createBaseVNode,
  createCommentVNode,
  createElementBlock,
  openBlock,
  renderList,
  toDisplayString,
  vModelText,
  withDirectives
} from "./chunk-3NMN3MUW.js";
import {
  primebus
} from "./chunk-34IKHZHP.js";
import "./chunk-RSJERJUL.js";

// node_modules/primevue/terminalservice/terminalservice.esm.js
var TerminalService = primebus();

// node_modules/primevue/terminal/terminal.esm.js
var script = {
  name: "Terminal",
  props: {
    welcomeMessage: {
      type: String,
      default: null
    },
    prompt: {
      type: String,
      default: null
    }
  },
  data() {
    return {
      commandText: null,
      commands: []
    };
  },
  mounted() {
    TerminalService.on("response", this.responseListener);
    this.$refs.input.focus();
  },
  updated() {
    this.$el.scrollTop = this.$el.scrollHeight;
  },
  beforeUnmount() {
    TerminalService.off("response", this.responseListener);
  },
  methods: {
    onClick() {
      this.$refs.input.focus();
    },
    onKeydown(event) {
      if (event.code === "Enter" && this.commandText) {
        this.commands.push({ text: this.commandText });
        TerminalService.emit("command", this.commandText);
        this.commandText = "";
      }
    },
    responseListener(response) {
      this.commands[this.commands.length - 1].response = response;
    }
  }
};
var _hoisted_1 = { key: 0 };
var _hoisted_2 = { class: "p-terminal-content" };
var _hoisted_3 = { class: "p-terminal-prompt" };
var _hoisted_4 = { class: "p-terminal-command" };
var _hoisted_5 = {
  class: "p-terminal-response",
  "aria-live": "polite"
};
var _hoisted_6 = { class: "p-terminal-prompt-container" };
var _hoisted_7 = { class: "p-terminal-prompt" };
function render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", {
    class: "p-terminal p-component",
    onClick: _cache[2] || (_cache[2] = (...args) => $options.onClick && $options.onClick(...args))
  }, [
    $props.welcomeMessage ? (openBlock(), createElementBlock("div", _hoisted_1, toDisplayString($props.welcomeMessage), 1)) : createCommentVNode("", true),
    createBaseVNode("div", _hoisted_2, [
      (openBlock(true), createElementBlock(Fragment, null, renderList($data.commands, (command, i) => {
        return openBlock(), createElementBlock("div", {
          key: command.text + i.toString()
        }, [
          createBaseVNode("span", _hoisted_3, toDisplayString($props.prompt), 1),
          createBaseVNode("span", _hoisted_4, toDisplayString(command.text), 1),
          createBaseVNode("div", _hoisted_5, toDisplayString(command.response), 1)
        ]);
      }), 128))
    ]),
    createBaseVNode("div", _hoisted_6, [
      createBaseVNode("span", _hoisted_7, toDisplayString($props.prompt), 1),
      withDirectives(createBaseVNode("input", {
        ref: "input",
        "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $data.commandText = $event),
        type: "text",
        class: "p-terminal-input",
        autocomplete: "off",
        onKeydown: _cache[1] || (_cache[1] = (...args) => $options.onKeydown && $options.onKeydown(...args))
      }, null, 544), [
        [vModelText, $data.commandText]
      ])
    ])
  ]);
}
function styleInject(css, ref) {
  if (ref === void 0)
    ref = {};
  var insertAt = ref.insertAt;
  if (!css || typeof document === "undefined") {
    return;
  }
  var head = document.head || document.getElementsByTagName("head")[0];
  var style = document.createElement("style");
  style.type = "text/css";
  if (insertAt === "top") {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }
  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}
var css_248z = "\n.p-terminal {\n    height: 18rem;\n    overflow: auto;\n}\n.p-terminal-prompt-container {\n    display: flex;\n    align-items: center;\n}\n.p-terminal-input {\n    flex: 1 1 auto;\n    border: 0 none;\n    background-color: transparent;\n    color: inherit;\n    padding: 0;\n    outline: 0 none;\n}\n.p-terminal-input::-ms-clear {\n    display: none;\n}\n";
styleInject(css_248z);
script.render = render;
export {
  script as default
};
//# sourceMappingURL=primevue_terminal.js.map
