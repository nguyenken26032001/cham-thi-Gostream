{
  "version": 3,
  "sources": ["../../@fullcalendar/core/src/Calendar.tsx", "../../primevue/fullcalendar/fullcalendar.esm.js"],
  "sourcesContent": ["import {\n  CalendarOptions, Action, CalendarContent, render, createElement, DelayedRunner, CssDimValue, applyStyleProp,\n  CalendarApi, CalendarRoot, isArraysEqual, CalendarDataManager, CalendarData,\n  CustomContentRenderContext, flushSync, unmountComponentAtNode,\n} from '@fullcalendar/common'\n\nexport class Calendar extends CalendarApi {\n  currentData: CalendarData\n  renderRunner: DelayedRunner\n  el: HTMLElement\n  isRendering = false\n  isRendered = false\n  currentClassNames: string[] = []\n  customContentRenderId = 0 // will affect custom generated classNames?\n\n  get view() { return this.currentData.viewApi } // for public API\n\n  constructor(el: HTMLElement, optionOverrides: CalendarOptions = {}) {\n    super()\n\n    this.el = el\n    this.renderRunner = new DelayedRunner(this.handleRenderRequest)\n\n    new CalendarDataManager({ // eslint-disable-line no-new\n      optionOverrides,\n      calendarApi: this,\n      onAction: this.handleAction,\n      onData: this.handleData,\n    })\n  }\n\n  handleAction = (action: Action) => {\n    // actions we know we want to render immediately\n    switch (action.type) {\n      case 'SET_EVENT_DRAG':\n      case 'SET_EVENT_RESIZE':\n        this.renderRunner.tryDrain()\n    }\n  }\n\n  handleData = (data: CalendarData) => {\n    this.currentData = data\n    this.renderRunner.request(data.calendarOptions.rerenderDelay)\n  }\n\n  handleRenderRequest = () => {\n    if (this.isRendering) {\n      this.isRendered = true\n      let { currentData } = this\n\n      flushSync(() => {\n        render(\n          <CalendarRoot options={currentData.calendarOptions} theme={currentData.theme} emitter={currentData.emitter}>\n            {(classNames, height, isHeightAuto, forPrint) => {\n              this.setClassNames(classNames)\n              this.setHeight(height)\n\n              return (\n                <CustomContentRenderContext.Provider value={this.customContentRenderId}>\n                  <CalendarContent\n                    isHeightAuto={isHeightAuto}\n                    forPrint={forPrint}\n                    {...currentData}\n                  />\n                </CustomContentRenderContext.Provider>\n              )\n            }}\n          </CalendarRoot>,\n          this.el,\n        )\n      })\n    } else if (this.isRendered) {\n      this.isRendered = false\n      unmountComponentAtNode(this.el)\n      this.setClassNames([])\n      this.setHeight('')\n    }\n  }\n\n  render() {\n    let wasRendering = this.isRendering\n\n    if (!wasRendering) {\n      this.isRendering = true\n    } else {\n      this.customContentRenderId += 1\n    }\n\n    this.renderRunner.request()\n\n    if (wasRendering) {\n      this.updateSize()\n    }\n  }\n\n  destroy() {\n    if (this.isRendering) {\n      this.isRendering = false\n      this.renderRunner.request()\n    }\n  }\n\n  updateSize() {\n    flushSync(() => {\n      super.updateSize()\n    })\n  }\n\n  batchRendering(func) {\n    this.renderRunner.pause('batchRendering')\n    func()\n    this.renderRunner.resume('batchRendering')\n  }\n\n  pauseRendering() { // available to plugins\n    this.renderRunner.pause('pauseRendering')\n  }\n\n  resumeRendering() { // available to plugins\n    this.renderRunner.resume('pauseRendering', true)\n  }\n\n  resetOptions(optionOverrides, append?) {\n    this.currentDataManager.resetOptions(optionOverrides, append)\n  }\n\n  setClassNames(classNames: string[]) {\n    if (!isArraysEqual(classNames, this.currentClassNames)) {\n      let { classList } = this.el\n\n      for (let className of this.currentClassNames) {\n        classList.remove(className)\n      }\n\n      for (let className of classNames) {\n        classList.add(className)\n      }\n\n      this.currentClassNames = classNames\n    }\n  }\n\n  setHeight(height: CssDimValue) {\n    applyStyleProp(this.el, 'height', height)\n  }\n}\n", "import '@fullcalendar/core/vdom';\nimport { Calendar } from '@fullcalendar/core';\nimport { openBlock, createElementBlock } from 'vue';\n\nvar script = {\n    name: 'FullCalendar',\n    props: {\n        events: Array,\n        options: null\n    },\n    calendar: null,\n    watch: {\n        events(value) {\n            if (value && this.calendar) {\n                this.calendar.removeAllEventSources();\n                this.calendar.addEventSource(value);\n            }\n        },\n        options(value) {\n            if (value && this.calendar) {\n                for (let prop in value) {\n                    this.calendar.setOption(prop, value[prop]);\n                }\n            }\n        }\n    },\n    mounted() {\n        if (this.$el.offsetParent) {\n            this.initialize();\n        }\n    },\n    updated() {\n        if (!this.calendar && this.$el.offsetParent) {\n            this.initialize();\n        }\n    },\n    beforeUnmount() {\n        if (this.calendar) {\n            this.calendar.destroy();\n            this.calendar = null;\n        }\n    },\n    methods: {\n        initialize() {\n            let defaultConfig = { themeSystem: 'standard' };\n            let config = this.options ? { ...this.options, ...defaultConfig } : defaultConfig;\n\n            this.calendar = new Calendar(this.$el, config);\n            this.calendar.render();\n\n            if (this.events) {\n                this.calendar.removeAllEventSources();\n                this.calendar.addEventSource(this.events);\n            }\n        }\n    }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (openBlock(), createElementBlock(\"div\"))\n}\n\nscript.render = render;\n\nexport { script as default };\n"],
  "mappings": "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",
  "names": ["Calendar", "render"]
}
