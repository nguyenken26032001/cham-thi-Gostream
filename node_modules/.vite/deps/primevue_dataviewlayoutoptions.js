import {
  createBaseVNode,
  createElementBlock,
  normalizeClass,
  openBlock
} from "./chunk-3NMN3MUW.js";
import "./chunk-RSJERJUL.js";

// node_modules/primevue/dataviewlayoutoptions/dataviewlayoutoptions.esm.js
var script = {
  name: "DataViewLayoutOptions",
  emits: ["update:modelValue"],
  props: {
    modelValue: String
  },
  data() {
    return {
      isListButtonPressed: false,
      isGridButtonPressed: false
    };
  },
  methods: {
    changeLayout(layout) {
      this.$emit("update:modelValue", layout);
      if (layout === "list") {
        this.isListButtonPressed = true;
        this.isGridButtonPressed = false;
      } else if (layout === "grid") {
        this.isGridButtonPressed = true;
        this.isListButtonPressed = false;
      }
    }
  },
  computed: {
    buttonListClass() {
      return ["p-button p-button-icon-only", { "p-highlight": this.modelValue === "list" }];
    },
    buttonGridClass() {
      return ["p-button p-button-icon-only", { "p-highlight": this.modelValue === "grid" }];
    },
    listViewAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.listView : void 0;
    },
    gridViewAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.gridView : void 0;
    }
  }
};
var _hoisted_1 = {
  class: "p-dataview-layout-options p-selectbutton p-buttonset",
  role: "group"
};
var _hoisted_2 = ["aria-label", "aria-pressed"];
var _hoisted_3 = createBaseVNode("i", { class: "pi pi-bars" }, null, -1);
var _hoisted_4 = [
  _hoisted_3
];
var _hoisted_5 = ["aria-label", "aria-pressed"];
var _hoisted_6 = createBaseVNode("i", { class: "pi pi-th-large" }, null, -1);
var _hoisted_7 = [
  _hoisted_6
];
function render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", _hoisted_1, [
    createBaseVNode("button", {
      "aria-label": $options.listViewAriaLabel,
      class: normalizeClass($options.buttonListClass),
      onClick: _cache[0] || (_cache[0] = ($event) => $options.changeLayout("list")),
      type: "button",
      "aria-pressed": $data.isListButtonPressed
    }, _hoisted_4, 10, _hoisted_2),
    createBaseVNode("button", {
      "aria-label": $options.gridViewAriaLabel,
      class: normalizeClass($options.buttonGridClass),
      onClick: _cache[1] || (_cache[1] = ($event) => $options.changeLayout("grid")),
      type: "button",
      "aria-pressed": $data.isGridButtonPressed
    }, _hoisted_7, 10, _hoisted_5)
  ]);
}
script.render = render;
export {
  script as default
};
//# sourceMappingURL=primevue_dataviewlayoutoptions.js.map
