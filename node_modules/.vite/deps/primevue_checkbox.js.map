{
  "version": 3,
  "sources": ["../../primevue/checkbox/checkbox.esm.js"],
  "sourcesContent": ["import { ObjectUtils } from 'primevue/utils';\nimport { openBlock, createElementBlock, normalizeClass, createElementVNode, mergeProps, normalizeStyle } from 'vue';\n\nvar script = {\n    name: 'Checkbox',\n    emits: ['click', 'update:modelValue', 'change', 'input', 'focus', 'blur'],\n    props: {\n        value: null,\n        modelValue: null,\n        binary: Boolean,\n        name: {\n            type: String,\n            default: null\n        },\n        trueValue: {\n            type: null,\n            default: true\n        },\n        falseValue: {\n            type: null,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        },\n        required: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: null\n        },\n        inputId: {\n            type: String,\n            default: null\n        },\n        inputClass: {\n            type: [String, Object],\n            default: null\n        },\n        inputStyle: {\n            type: Object,\n            default: null\n        },\n        inputProps: {\n            type: null,\n            default: null\n        },\n        'aria-labelledby': {\n            type: String,\n            default: null\n        },\n        'aria-label': {\n            type: String,\n            default: null\n        }\n    },\n    data() {\n        return {\n            focused: false\n        };\n    },\n    methods: {\n        onClick(event) {\n            if (!this.disabled && !this.readonly) {\n                let newModelValue;\n\n                if (this.binary) {\n                    newModelValue = this.checked ? this.falseValue : this.trueValue;\n                } else {\n                    if (this.checked) newModelValue = this.modelValue.filter((val) => !ObjectUtils.equals(val, this.value));\n                    else newModelValue = this.modelValue ? [...this.modelValue, this.value] : [this.value];\n                }\n\n                this.$emit('click', event);\n                this.$emit('update:modelValue', newModelValue);\n                this.$emit('change', event);\n                this.$emit('input', newModelValue);\n                this.$refs.input.focus();\n            }\n        },\n        onFocus(event) {\n            this.focused = true;\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.$emit('blur', event);\n        }\n    },\n    computed: {\n        checked() {\n            return this.binary ? this.modelValue === this.trueValue : ObjectUtils.contains(this.value, this.modelValue);\n        },\n        containerClass() {\n            return [\n                'p-checkbox p-component',\n                {\n                    'p-checkbox-checked': this.checked,\n                    'p-checkbox-disabled': this.disabled,\n                    'p-checkbox-focused': this.focused\n                }\n            ];\n        }\n    }\n};\n\nconst _hoisted_1 = { class: \"p-hidden-accessible\" };\nconst _hoisted_2 = [\"id\", \"value\", \"name\", \"checked\", \"tabindex\", \"disabled\", \"readonly\", \"required\", \"aria-labelledby\", \"aria-label\"];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass($options.containerClass),\n    onClick: _cache[2] || (_cache[2] = $event => ($options.onClick($event)))\n  }, [\n    createElementVNode(\"div\", _hoisted_1, [\n      createElementVNode(\"input\", mergeProps({\n        ref: \"input\",\n        id: $props.inputId,\n        type: \"checkbox\",\n        value: $props.value,\n        name: $props.name,\n        checked: $options.checked,\n        tabindex: $props.tabindex,\n        disabled: $props.disabled,\n        readonly: $props.readonly,\n        required: $props.required,\n        \"aria-labelledby\": _ctx.ariaLabelledby,\n        \"aria-label\": _ctx.ariaLabel,\n        onFocus: _cache[0] || (_cache[0] = $event => ($options.onFocus($event))),\n        onBlur: _cache[1] || (_cache[1] = $event => ($options.onBlur($event)))\n      }, $props.inputProps), null, 16, _hoisted_2)\n    ]),\n    createElementVNode(\"div\", {\n      ref: \"box\",\n      class: normalizeClass(['p-checkbox-box', $props.inputClass, { 'p-highlight': $options.checked, 'p-disabled': $props.disabled, 'p-focus': $data.focused }]),\n      style: normalizeStyle($props.inputStyle)\n    }, [\n      createElementVNode(\"span\", {\n        class: normalizeClass(['p-checkbox-icon', { 'pi pi-check': $options.checked }])\n      }, null, 2)\n    ], 6)\n  ], 2))\n}\n\nscript.render = render;\n\nexport { script as default };\n"],
  "mappings": ";;;;;;;;;;;;;;AAGA,IAAI,SAAS;AAAA,EACT,MAAM;AAAA,EACN,OAAO,CAAC,SAAS,qBAAqB,UAAU,SAAS,SAAS,MAAM;AAAA,EACxE,OAAO;AAAA,IACH,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,MAAM;AAAA,MACF,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,WAAW;AAAA,MACP,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,YAAY;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,UAAU;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,UAAU;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,UAAU;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,UAAU;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,YAAY;AAAA,MACR,MAAM,CAAC,QAAQ,MAAM;AAAA,MACrB,SAAS;AAAA,IACb;AAAA,IACA,YAAY;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,YAAY;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,mBAAmB;AAAA,MACf,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,cAAc;AAAA,MACV,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,EACJ;AAAA,EACA,OAAO;AACH,WAAO;AAAA,MACH,SAAS;AAAA,IACb;AAAA,EACJ;AAAA,EACA,SAAS;AAAA,IACL,QAAQ,OAAO;AACX,UAAI,CAAC,KAAK,YAAY,CAAC,KAAK,UAAU;AAClC,YAAI;AAEJ,YAAI,KAAK,QAAQ;AACb,0BAAgB,KAAK,UAAU,KAAK,aAAa,KAAK;AAAA,QAC1D,OAAO;AACH,cAAI,KAAK;AAAS,4BAAgB,KAAK,WAAW,OAAO,CAAC,QAAQ,CAAC,YAAY,OAAO,KAAK,KAAK,KAAK,CAAC;AAAA;AACjG,4BAAgB,KAAK,aAAa,CAAC,GAAG,KAAK,YAAY,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK;AAAA,QACzF;AAEA,aAAK,MAAM,SAAS,KAAK;AACzB,aAAK,MAAM,qBAAqB,aAAa;AAC7C,aAAK,MAAM,UAAU,KAAK;AAC1B,aAAK,MAAM,SAAS,aAAa;AACjC,aAAK,MAAM,MAAM,MAAM;AAAA,MAC3B;AAAA,IACJ;AAAA,IACA,QAAQ,OAAO;AACX,WAAK,UAAU;AACf,WAAK,MAAM,SAAS,KAAK;AAAA,IAC7B;AAAA,IACA,OAAO,OAAO;AACV,WAAK,UAAU;AACf,WAAK,MAAM,QAAQ,KAAK;AAAA,IAC5B;AAAA,EACJ;AAAA,EACA,UAAU;AAAA,IACN,UAAU;AACN,aAAO,KAAK,SAAS,KAAK,eAAe,KAAK,YAAY,YAAY,SAAS,KAAK,OAAO,KAAK,UAAU;AAAA,IAC9G;AAAA,IACA,iBAAiB;AACb,aAAO;AAAA,QACH;AAAA,QACA;AAAA,UACI,sBAAsB,KAAK;AAAA,UAC3B,uBAAuB,KAAK;AAAA,UAC5B,sBAAsB,KAAK;AAAA,QAC/B;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;AAEA,IAAM,aAAa,EAAE,OAAO,sBAAsB;AAClD,IAAM,aAAa,CAAC,MAAM,SAAS,QAAQ,WAAW,YAAY,YAAY,YAAY,YAAY,mBAAmB,YAAY;AAErI,SAAS,OAAO,MAAM,QAAQ,QAAQ,QAAQ,OAAO,UAAU;AAC7D,SAAQ,UAAU,GAAG,mBAAmB,OAAO;AAAA,IAC7C,OAAO,eAAe,SAAS,cAAc;AAAA,IAC7C,SAAS,OAAO,CAAC,MAAM,OAAO,CAAC,IAAI,YAAW,SAAS,QAAQ,MAAM;AAAA,EACvE,GAAG;AAAA,IACD,gBAAmB,OAAO,YAAY;AAAA,MACpC,gBAAmB,SAAS,WAAW;AAAA,QACrC,KAAK;AAAA,QACL,IAAI,OAAO;AAAA,QACX,MAAM;AAAA,QACN,OAAO,OAAO;AAAA,QACd,MAAM,OAAO;AAAA,QACb,SAAS,SAAS;AAAA,QAClB,UAAU,OAAO;AAAA,QACjB,UAAU,OAAO;AAAA,QACjB,UAAU,OAAO;AAAA,QACjB,UAAU,OAAO;AAAA,QACjB,mBAAmB,KAAK;AAAA,QACxB,cAAc,KAAK;AAAA,QACnB,SAAS,OAAO,CAAC,MAAM,OAAO,CAAC,IAAI,YAAW,SAAS,QAAQ,MAAM;AAAA,QACrE,QAAQ,OAAO,CAAC,MAAM,OAAO,CAAC,IAAI,YAAW,SAAS,OAAO,MAAM;AAAA,MACrE,GAAG,OAAO,UAAU,GAAG,MAAM,IAAI,UAAU;AAAA,IAC7C,CAAC;AAAA,IACD,gBAAmB,OAAO;AAAA,MACxB,KAAK;AAAA,MACL,OAAO,eAAe,CAAC,kBAAkB,OAAO,YAAY,EAAE,eAAe,SAAS,SAAS,cAAc,OAAO,UAAU,WAAW,MAAM,QAAQ,CAAC,CAAC;AAAA,MACzJ,OAAO,eAAe,OAAO,UAAU;AAAA,IACzC,GAAG;AAAA,MACD,gBAAmB,QAAQ;AAAA,QACzB,OAAO,eAAe,CAAC,mBAAmB,EAAE,eAAe,SAAS,QAAQ,CAAC,CAAC;AAAA,MAChF,GAAG,MAAM,CAAC;AAAA,IACZ,GAAG,CAAC;AAAA,EACN,GAAG,CAAC;AACN;AAEA,OAAO,SAAS;",
  "names": []
}
