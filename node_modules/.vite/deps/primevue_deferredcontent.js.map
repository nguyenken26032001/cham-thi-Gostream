{
  "version": 3,
  "sources": ["../../primevue/deferredcontent/deferredcontent.esm.js"],
  "sourcesContent": ["import { openBlock, createElementBlock, renderSlot, createCommentVNode } from 'vue';\n\nvar script = {\n    name: 'DeferredContent',\n    emits: ['load'],\n    data() {\n        return {\n            loaded: false\n        };\n    },\n    mounted() {\n        if (!this.loaded) {\n            if (this.shouldLoad()) this.load();\n            else this.bindScrollListener();\n        }\n    },\n    beforeUnmount() {\n        this.unbindScrollListener();\n    },\n    methods: {\n        bindScrollListener() {\n            this.documentScrollListener = () => {\n                if (this.shouldLoad()) {\n                    this.load();\n                    this.unbindScrollListener();\n                }\n            };\n\n            window.addEventListener('scroll', this.documentScrollListener);\n        },\n        unbindScrollListener() {\n            if (this.documentScrollListener) {\n                window.removeEventListener('scroll', this.documentScrollListener);\n                this.documentScrollListener = null;\n            }\n        },\n        shouldLoad() {\n            if (this.loaded) {\n                return false;\n            } else {\n                const rect = this.$refs.container.getBoundingClientRect();\n                const docElement = document.documentElement;\n                const winHeight = docElement.clientHeight;\n\n                return winHeight >= rect.top;\n            }\n        },\n        load(event) {\n            this.loaded = true;\n            this.$emit('load', event);\n        }\n    }\n};\n\nconst _hoisted_1 = { ref: \"container\" };\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (openBlock(), createElementBlock(\"div\", _hoisted_1, [\n    ($data.loaded)\n      ? renderSlot(_ctx.$slots, \"default\", { key: 0 })\n      : createCommentVNode(\"\", true)\n  ], 512))\n}\n\nscript.render = render;\n\nexport { script as default };\n"],
  "mappings": ";;;;;;;;;AAEA,IAAI,SAAS;AAAA,EACT,MAAM;AAAA,EACN,OAAO,CAAC,MAAM;AAAA,EACd,OAAO;AACH,WAAO;AAAA,MACH,QAAQ;AAAA,IACZ;AAAA,EACJ;AAAA,EACA,UAAU;AACN,QAAI,CAAC,KAAK,QAAQ;AACd,UAAI,KAAK,WAAW;AAAG,aAAK,KAAK;AAAA;AAC5B,aAAK,mBAAmB;AAAA,IACjC;AAAA,EACJ;AAAA,EACA,gBAAgB;AACZ,SAAK,qBAAqB;AAAA,EAC9B;AAAA,EACA,SAAS;AAAA,IACL,qBAAqB;AACjB,WAAK,yBAAyB,MAAM;AAChC,YAAI,KAAK,WAAW,GAAG;AACnB,eAAK,KAAK;AACV,eAAK,qBAAqB;AAAA,QAC9B;AAAA,MACJ;AAEA,aAAO,iBAAiB,UAAU,KAAK,sBAAsB;AAAA,IACjE;AAAA,IACA,uBAAuB;AACnB,UAAI,KAAK,wBAAwB;AAC7B,eAAO,oBAAoB,UAAU,KAAK,sBAAsB;AAChE,aAAK,yBAAyB;AAAA,MAClC;AAAA,IACJ;AAAA,IACA,aAAa;AACT,UAAI,KAAK,QAAQ;AACb,eAAO;AAAA,MACX,OAAO;AACH,cAAM,OAAO,KAAK,MAAM,UAAU,sBAAsB;AACxD,cAAM,aAAa,SAAS;AAC5B,cAAM,YAAY,WAAW;AAE7B,eAAO,aAAa,KAAK;AAAA,MAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAO;AACR,WAAK,SAAS;AACd,WAAK,MAAM,QAAQ,KAAK;AAAA,IAC5B;AAAA,EACJ;AACJ;AAEA,IAAM,aAAa,EAAE,KAAK,YAAY;AAEtC,SAAS,OAAO,MAAM,QAAQ,QAAQ,QAAQ,OAAO,UAAU;AAC7D,SAAQ,UAAU,GAAG,mBAAmB,OAAO,YAAY;AAAA,IACxD,MAAM,SACH,WAAW,KAAK,QAAQ,WAAW,EAAE,KAAK,EAAE,CAAC,IAC7C,mBAAmB,IAAI,IAAI;AAAA,EACjC,GAAG,GAAG;AACR;AAEA,OAAO,SAAS;",
  "names": []
}
